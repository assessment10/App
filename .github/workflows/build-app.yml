name: build app

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: docker build . -t ${{secrets.DOCKER_USERNAME}}/testing:nginx-${{ github.sha }}

      - name: Push the Docker image to Docker Hub
        run: docker push ${{secrets.DOCKER_USERNAME}}/testing:nginx-${{ github.sha }}

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Update ECS task def
        run: |
          TASK_DEF=$(aws ecs describe-task-definition --task-definition nginx-td-default --query 'taskDefinition' --output json)
          NEW_TASK_DEF=$(echo $TASK_DEF | jq --arg IMAGE "${{secrets.DOCKER_USERNAME}}/testing:nginx-${{ github.sha }}" '.containerDefinitions[0].image = $IMAGE')
          FINAL_TASK_DEF=$(echo $NEW_TASK_DEF | jq '{family: .family, volumes: .volumes, containerDefinitions: .containerDefinitions, taskRoleArn: .taskRoleArn, executionRoleArn: .executionRoleArn, networkMode: .networkMode, cpu: .cpu, memory: .memory}')
          aws ecs register-task-definition --cli-input-json "$FINAL_TASK_DEF"
    
      - name: Update ECS service
        run: |
          aws ecs update-service --cluster ecs-default --service nginx-default --task-definition nginx-td-default --force-new-deployment
